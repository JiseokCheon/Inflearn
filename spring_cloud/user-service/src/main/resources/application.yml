server:
  port: 0 # random port 실행함

spring:
  application:
    name: user-service
  zipkin:
    base-url: http://127.0.0.1:9411
    enabled: true
  sleuth:
    sampler:
      probability: 1.0

  rabbitmq:
    host: 127.0.0.1
    port: 5672 # 웹 브라우저에서 접속할때는 15672, amqp 프로토콜 사용시에는 5672
    username: guest
    password: guest
  # 2.4 이후로는 config 설정을 application.yml 파일에 설정
  cloud:
    config:
      name: user-service
#      uri: http://localhost:8888
  profiles:
    active: prod
  config:
    import: optional:configserver:http://localhost:8888

  h2:
    console:
      enabled: true
      settings:
        web-allow-others: true
      path: /h2-console
#  datasource:
#    driver-class-name: org.h2.Driver
#    url: jdbc:h2:mem:testdb


eureka:
  instance:
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}

  client:
    register-with-eureka: true
    # Eureka 서버로부터 인스턴스들의 정보를 주기적으로 가져올 것인지를 설정하는 속성
    # true이면 갱신된 정보를 받겠다는 설정
    fetch-registry: true
    # Eureka 서버의 위치 폴더 설정
    service-url:
      defaultZone: http://127.0.0.1:8761/eureka

greeting:
  message: Welcome to the Simple E-commerce

logging:
  level:
    com.example.userservice.client: DEBUG

management:
  endpoints:
    web:
      exposure:
        include: refresh,health,beans,busrefresh
# refresh는 config server에서 가져올 내용을 refresh 한다. (가장 중요)


# spring cloud config 에서 가져올거라서 주석처리
#token:
#  expiration_time: 86400000 # 토큰 지속 시간 (하루 24 * 60 * 60 * 1000)
#  secret: user_token # 임의의 값